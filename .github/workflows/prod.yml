name: Build docker image
on: [push]

jobs:
  build:
    name: build go binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.14.4'
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.BUILD_TOKEN }}
        run: git config --global url."https://ftwooo:${TOKEN}@github.com".insteadOf "https://github.com"
      - name: build go project
        run: go build -o main/main main/main.go
        env:
          GO111MODULE: on
          CGO_ENABLED: 0
          GOOS: linux
          GOARCH: amd64

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=docker.pkg.github.com/rexue2019/k8sdemo
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
            VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Push to GitHub Packages # doc: https://docs.github.com/en/actions/guides/publishing-docker-images
        uses: docker/build-push-action@v2
        with:
            push: ${{ github.event_name != 'pull_request' }}
            file: Dockerfile_prod
            tags: ${{ steps.prep.outputs.tags }}
            secrets: username=${{ github.actor }},password=${{ secrets.BUILD_TOKEN }}
            labels: |
                org.opencontainers.image.title=${{ github.event.repository.name }}
                org.opencontainers.image.description=${{ github.event.repository.description }}
                org.opencontainers.image.url=${{ github.event.repository.html_url }}
                org.opencontainers.image.source=${{ github.event.repository.clone_url }}
                org.opencontainers.image.version=${{ steps.prep.outputs.version }}
                org.opencontainers.image.created=${{ steps.prep.outputs.created }}
                org.opencontainers.image.revision=${{ github.sha }}
                org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}